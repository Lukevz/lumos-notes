---
import { type CollectionEntry, getCollection } from 'astro:content';
import BlogPost from '../../layouts/BlogPost.astro';

// Export getStaticPaths() so that Astro builds a static page for each blog post.
export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post) => ({
    params: { slug: post.slug }
  }));
}

// Now fetch all posts to determine the current post and compute backlinks.
const posts = await getCollection('blog');
const currentSlug = Astro.params.slug;

// Find the current post by matching the slug.
const post = posts.find((p) => p.slug === currentSlug);
if (!post) {
  throw new Error(`Post with slug "${currentSlug}" not found.`);
}

// Render the current post to get its content (e.g. Markdown-rendered HTML).
const { Content } = await post.render();

// Compute backlinks: find other posts that include a link to `/blog/{currentSlug}`.
const backlinks = posts.filter((p) => {
  if (p.slug === currentSlug) return false;
  return p.body && p.body.includes(`/blog/${currentSlug}`);
});
---
<BlogPost {...post.data} backlinks={backlinks}>
  <Content />
</BlogPost>
