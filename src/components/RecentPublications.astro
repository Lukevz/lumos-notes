---
import { getCollection } from "astro:content";
import FormattedDate from "./FormattedDate.astro";
import TagLink from "./TagLink.astro";
import { marked } from 'marked';

const posts = await getCollection("blog");
let numberOfPostsToDisplay = 6;
let recentPosts = posts.slice(0, numberOfPostsToDisplay);

// Process the markdown content
const processedPosts = recentPosts.map((post) => ({
  ...post,
  renderedContent: marked.parse(
    post.data.description || post.data.excerpt || post.body.slice(0, 150) + '...'
  )
}));
---

<div class="px-4 md:px-2 flex flex-col gap-4 mt-16">
  <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
    {
      processedPosts.map((post) => (
        <div class="flex flex-col gap-4 border-b pb-4 post-wrap">
          {/* <p>{post.data.pubDate}</p> */}
          <FormattedDate date={post.data.pubDate} />
          <a class="font-bold text-lg" href={`/blog/${post.slug}`}>
            {post.data.title}
          </a>
          <div 
            class="text-gray-700 dark:text-gray-300 prose dark:prose-invert"
            set:html={post.renderedContent}
          />
          <div class="flex gap-2">
              {post.data.tags?.map((i) => {
                return <TagLink tag={i} />;
              })}
          </div>
        </div>
      ))
    }
  </div>
  <a
    class="border flex justify-center items-center hover:no-underline hover:bg-gray-200 hover:border-gray-300 transition-colors ease-in-out bg-gray-100 w-full max-w-xs mx-auto mt-12 rounded-lg text-gray-700 text-xs h-8 font-medium border-gray-200 dark:bg-neutral-700 dark:border-neutral-600 dark:text-neutral-300 hover:dark:bg-neutral-700/50 hover:dark:border-neutral-600 hover:dark:text-neutral-100"
    href="/blog">View more</a
  >
</div>
